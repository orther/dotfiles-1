<?xml version="1.0"?>
<root>
  <devicevendordef>
    <vendorname>KINESIS</vendorname>
    <vendorid>0x05f3</vendorid>
  </devicevendordef>

  <deviceproductdef>
    <productname>ADVANTAGE</productname>
    <productid>0x0007</productid>
  </deviceproductdef>

  <modifierdef>MY_SYMBOLS</modifierdef>

  <item>
    <name>Kinesis tweaks</name>

    <item>
      <name>Hold esc for control</name>
      <identifier>aaronjensen.kinesis.esc_ctrl</identifier>
      <device_only>DeviceVendor::KINESIS, DeviceProduct::ADVANTAGE</device_only>

      <!-- Hold esc for ctrl -->
      <autogen>
        __KeyOverlaidModifier__
        KeyCode::ESCAPE,
        ModifierFlag::NONE,
        KeyCode::CONTROL_L,
        ModifierFlag::NONE,
        KeyCode::ESCAPE
      </autogen>
    </item>

    <item>
      <name>COMMAND_R -> Hyper (Cmd+Shift+Ctrl+Opt)</name>
      <identifier>aaronjensen.kinesis.hyper</identifier>
      <device_only>DeviceVendor::KINESIS, DeviceProduct::ADVANTAGE</device_only>

      <!-- Hyper -->
      <autogen>
        __KeyToKey__
        KeyCode::COMMAND_R,
        KeyCode::COMMAND_L,
        ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L
      </autogen>
    </item>

    <item>
      <name>DANISH_DOLLAR -> Super (Cmd+Ctrl+Opt)</name>
      <identifier>aaronjensen.kinesis.super</identifier>
      <device_only>DeviceVendor::KINESIS, DeviceProduct::ADVANTAGE</device_only>

      <!-- Super -->
      <autogen>
        __KeyToKey__
        KeyCode::DANISH_DOLLAR,
        KeyCode::COMMAND_L,
        ModifierFlag::OPTION_L | ModifierFlag::CONTROL_L
      </autogen>
    </item>

    <item>
      <name>Symbol Overlay</name>
      <identifier>aaronjensen.kinesis.symbol_overlay</identifier>
      <device_only>DeviceVendor::KINESIS, DeviceProduct::ADVANTAGE</device_only>
      <appendix>Hold down esc to change keys to:</appendix>
      <appendix>!@#$%^&amp;*-+</appendix>
      <appendix>a[{(=_)}];</appendix>
      <appendix>zx~`bn|&lt;&gt;/</appendix>


      <autogen>
        __KeyOverlaidModifier__
        KeyCode::ESCAPE,
        KeyCode::VK_MODIFIER_MY_SYMBOLS,
        ModifierFlag::NONE,
        KeyCode::ESCAPE
      </autogen>

      <!-- F -> ( -->
      <autogen>
        __KeyToKey__
        KeyCode::F, ModifierFlag::MY_SYMBOLS,
        KeyCode::KEY_9, ModifierFlag::SHIFT_L
      </autogen>
      <!-- J -> ) -->
      <autogen>
        __KeyToKey__
        KeyCode::J, ModifierFlag::MY_SYMBOLS,
        KeyCode::KEY_0, ModifierFlag::SHIFT_L
      </autogen>

      <!-- S -> [ -->
      <autogen>
        __KeyToKey__
        KeyCode::S, ModifierFlag::MY_SYMBOLS,
        KeyCode::BRACKET_LEFT
      </autogen>
      <!-- L -> ] -->
      <autogen>
        __KeyToKey__
        KeyCode::L, ModifierFlag::MY_SYMBOLS,
        KeyCode::BRACKET_RIGHT
      </autogen>

      <!-- D -> { -->
      <autogen>
        __KeyToKey__
        KeyCode::D, ModifierFlag::MY_SYMBOLS,
        KeyCode::BRACKET_LEFT, ModifierFlag::SHIFT_L
      </autogen>
      <!-- K -> } -->
      <autogen>
        __KeyToKey__
        KeyCode::K, ModifierFlag::MY_SYMBOLS,
        KeyCode::BRACKET_RIGHT, ModifierFlag::SHIFT_L
      </autogen>

      <!-- , -> < -->
      <autogen>
        __KeyToKey__
        KeyCode::COMMA, ModifierFlag::MY_SYMBOLS,
        KeyCode::COMMA, ModifierFlag::SHIFT_L
      </autogen>
      <!-- . -> > -->
      <autogen>
        __KeyToKey__
        KeyCode::DOT, ModifierFlag::MY_SYMBOLS,
        KeyCode::DOT, ModifierFlag::SHIFT_L
      </autogen>

      <!-- H -> _ -->
      <autogen>
        __KeyToKey__
        KeyCode::H, ModifierFlag::MY_SYMBOLS,
        KeyCode::MINUS, ModifierFlag::SHIFT_L
      </autogen>
      <!-- G -> = -->
      <autogen>
        __KeyToKey__
        KeyCode::G, ModifierFlag::MY_SYMBOLS,
        KeyCode::EQUAL
      </autogen>

      <autogen>
        __KeyToKey__
        KeyCode::Q, ModifierFlag::MY_SYMBOLS,
        KeyCode::KEY_1, ModifierFlag::SHIFT_L
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::W, ModifierFlag::MY_SYMBOLS,
        KeyCode::KEY_2, ModifierFlag::SHIFT_L
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::E, ModifierFlag::MY_SYMBOLS,
        KeyCode::KEY_3, ModifierFlag::SHIFT_L
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::R, ModifierFlag::MY_SYMBOLS,
        KeyCode::KEY_4, ModifierFlag::SHIFT_L
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::T, ModifierFlag::MY_SYMBOLS,
        KeyCode::KEY_5, ModifierFlag::SHIFT_L
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::Y, ModifierFlag::MY_SYMBOLS,
        KeyCode::KEY_6, ModifierFlag::SHIFT_L
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::U, ModifierFlag::MY_SYMBOLS,
        KeyCode::KEY_7, ModifierFlag::SHIFT_L
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::I, ModifierFlag::MY_SYMBOLS,
        KeyCode::KEY_8, ModifierFlag::SHIFT_L
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::O, ModifierFlag::MY_SYMBOLS,
        KeyCode::MINUS
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::P, ModifierFlag::MY_SYMBOLS,
        KeyCode::EQUAL, ModifierFlag::SHIFT_L
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::V, ModifierFlag::MY_SYMBOLS,
        KeyCode::BACKQUOTE
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::C, ModifierFlag::MY_SYMBOLS,
        KeyCode::BACKQUOTE, ModifierFlag::SHIFT_L
      </autogen>
      <autogen>
        __KeyToKey__
        KeyCode::M, ModifierFlag::MY_SYMBOLS,
        KeyCode::BACKSLASH, ModifierFlag::SHIFT_L
      </autogen>
    </item>
  </item>

  <item>
    <name>Remap ; to Hyper when held down, ; when typed normally</name>
    <appendix>OS X doesn't have a Hyper. This maps right control to Control + Shift + Option + Command.</appendix>

    <identifier>aaronjensen.semicolon_to_hyper</identifier>
    <device_not>DeviceVendor::KINESIS, DeviceProduct::ADVANTAGE</device_only>

    <autogen>
      __KeyOverlaidModifier__
      KeyCode::SEMICOLON,
      ModifierFlag::NONE,
      KeyCode::COMMAND_L,
      ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
      KeyCode::SEMICOLON
    </autogen>

    <!-- ; followed by space is difficult to type w/o triggering hyper, this works around it -->
    <autogen>
      __KeyToKey__
      KeyCode::SPACE,
      ModifierFlag::COMMAND_L | ModifierFlag::OPTION_L | ModifierFlag::SHIFT_L | ModifierFlag::CONTROL_L,
      KeyCode::SEMICOLON, KeyCode::SPACE
    </autogen>
  </item>
</root>
